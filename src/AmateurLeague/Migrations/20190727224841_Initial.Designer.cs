// <auto-generated />
using System;
using AmateurLeague;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmateurLeague.Migrations
{
    [DbContext(typeof(LeagueManagerContext))]
    [Migration("20190727224841_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmateurLeague.Entity.League", b =>
                {
                    b.Property<int>("LeagueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SportId")
                        .IsRequired();

                    b.HasKey("LeagueId");

                    b.HasIndex("SportId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("AmateurLeague.Entity.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("PlayerId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AmateurLeague.Entity.Sport", b =>
                {
                    b.Property<string>("SportId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnName("GenderType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("SportId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportId = "1",
                            GenderType = "Men",
                            Name = "Basketball"
                        },
                        new
                        {
                            SportId = "2",
                            GenderType = "Women",
                            Name = "Basketball"
                        },
                        new
                        {
                            SportId = "3",
                            GenderType = "Coed",
                            Name = "Basketball"
                        },
                        new
                        {
                            SportId = "4",
                            GenderType = "Men",
                            Name = "Baseball"
                        },
                        new
                        {
                            SportId = "5",
                            GenderType = "Women",
                            Name = "Baseball"
                        },
                        new
                        {
                            SportId = "6",
                            GenderType = "Coed",
                            Name = "Baseball"
                        },
                        new
                        {
                            SportId = "7",
                            GenderType = "Men",
                            Name = "Soccer"
                        },
                        new
                        {
                            SportId = "8",
                            GenderType = "Women",
                            Name = "Soccer"
                        },
                        new
                        {
                            SportId = "9",
                            GenderType = "Coed",
                            Name = "Soccer"
                        },
                        new
                        {
                            SportId = "10",
                            GenderType = "Men",
                            Name = "Flag Football"
                        },
                        new
                        {
                            SportId = "11",
                            GenderType = "Women",
                            Name = "Flag Football"
                        },
                        new
                        {
                            SportId = "12",
                            GenderType = "Coed",
                            Name = "Flag Football"
                        });
                });

            modelBuilder.Entity("AmateurLeague.Entity.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeagueId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("TeamId");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AmateurLeague.Entity.TeamPlayer", b =>
                {
                    b.Property<int>("TeamId");

                    b.Property<int>("PlayerId");

                    b.HasKey("TeamId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("TeamPlayer");
                });

            modelBuilder.Entity("AmateurLeague.Entity.League", b =>
                {
                    b.HasOne("AmateurLeague.Entity.Sport", "Sport")
                        .WithMany("Leagues")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AmateurLeague.Entity.Team", b =>
                {
                    b.HasOne("AmateurLeague.Entity.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AmateurLeague.Entity.TeamPlayer", b =>
                {
                    b.HasOne("AmateurLeague.Entity.Player", "Player")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AmateurLeague.Entity.Team", "Team")
                        .WithMany("TeamPlayers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
